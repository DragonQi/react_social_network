{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/common/Preloader/Preloader.module.css","components/Sidebar/Sidebar.module.css","components/Profile/Profile.module.css","reportWebVitals.js","components/api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/redux-store.js","components/Sidebar/Sidebar.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/common/Preloader/Preloader.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/hoc/withAuthRedirect.js","components/Profile/ProfileContainer.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","assets/images/user.png","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","index.js","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","headers","baseURL","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","setUserProfile","setUserStatus","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","name","messages","newMessageBody","dialogsReducer","body","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","usersReducer","map","u","followed","countNumber","filter","setToggleIsFetching","toggleFollowingProgress","SET_AUTH_USER_DATA","login","isAuth","authReducer","setAuthUserData","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Sidebar","props","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","Post","src","MyPosts","postsElements","p","newPostElement","React","createRef","postsBlock","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","Preloader","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","updateUserStatus","onStatusChange","e","currentTarget","prevProps","prevState","snapshot","this","onDoubleClick","onBlur","Component","ProfileInfo","descriptionBlock","photos","large","MyPostsContainer","connect","dispatch","updateNewPostTextCreator","Profile","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ProfileContainer","match","params","getProfileThunk","getUserStatusThunk","updateUserStatusThunk","compose","resultCode","withRouter","Music","News","Settings","DialogItem","path","dialog","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","placeholder","target","updateNewMessageBodyCreator","sendMessage","Users","pagesCount","Math","ceil","pages","i","push","selectedPage","onPageChanged","small","userPhoto","disabled","some","unfollow","follow","UsersContainer","pageNumber","setCurrentPage","getUsersThunk","followThunk","unfollowThunk","items","totalCount","followApply","unfollowApply","Header","header","loginBlock","logout","HeaderContainer","required","undefined","Login","onSubmit","render","handleSubmit","form","submitting","pristine","values","validate","input","meta","error","touched","component","App","getAuthUserData","DialogsContainer","LoginContainer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e520cf0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1OB_3\",\"dialogsItems\":\"Dialogs_dialogsItems__O_eE5\",\"active\":\"Dialogs_active__1V68z\",\"messages\":\"Dialogs_messages__uvz6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__kTTe_\",\"posts\":\"MyPosts_posts__3OR7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ZaJ9z\",\"post\":\"Post_post__R_LEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2k3WV\",\"selectedPage\":\"Users_selectedPage__3dX3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3wqyU\",\"loginBlock\":\"Header_loginBlock__2v8-d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3iuZ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Preloader_item__2Rtas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__WdJwm\",\"friends\":\"Sidebar_friends__2S-TI\",\"friend\":\"Sidebar_friend__3jKJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Profile_item__3e8tZ\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    headers: {\r\n        'API-KEY': '6a1315c1-3a31-49c8-b775-90135b06c639'\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getFollow (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    getUnfollow (userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    getStatus (userId) {\r\n        return instance.get('profile/status/' + userId).then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', { status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n     login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}","import {profileAPI} from \"../components/api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"TextMessage1\", likesCount: 12},\r\n        {id: 2, message: \"TextMessage2\", likesCount: 11},\r\n        {id: 3, message: \"TextMessage3\", likesCount: 15},\r\n        {id: 4, message: \"TextMessage4\", likesCount: 13}\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n            //добавление поста\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }//логика набирания текста в textarea поста, с обновлением на каждый символ\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostCreator = () => {\r\n    return {type: ADD_POST}\r\n};\r\nexport const updateNewPostTextCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\r\n};\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getProfileThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getProfile(userId).then(data => {\r\n            dispatch(setUserProfile(data));\r\n        })\r\n    }\r\n};\r\n\r\nexport const getUserStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(data => {\r\n            dispatch(setUserStatus(data));\r\n        })\r\n    }\r\n};\r\n\r\nexport const updateUserStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status))\r\n            }\r\n        })\r\n    }\r\n};","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Name1'},\r\n        {id: 2, name: 'Name2'},\r\n        {id: 3, name: 'Name3'},\r\n        {id: 4, name: 'Name4'},\r\n        {id: 5, name: 'Name5'},\r\n        {id: 6, name: 'Name6'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: '1'},\r\n        {id: 2, message: '2'},\r\n        {id: 3, message: '3'},\r\n        {id: 4, message: '4'},\r\n        {id: 5, message: '5'},\r\n        {id: 6, message: '6'}\r\n    ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        //посимвольное обновление в textarea сообщения\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 7, message: body}]\r\n            };\r\n        //пуш содержимого textarea в _state\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = () => {\r\n    return {type: SEND_MESSAGE}\r\n};\r\nexport const updateNewMessageBodyCreator = (text) => {\r\n    return {type: UPDATE_NEW_MESSAGE_BODY, body: text}\r\n};","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {usersAPI} from \"../components/api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.countNumber}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\nexport const followApply = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowApply = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, countNumber: totalUsersCount})\r\nexport const setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setToggleIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n            dispatch(setToggleIsFetching(false));\r\n        })\r\n    }\r\n};\r\n\r\nexport const followThunk = (userId) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.getFollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(followApply(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        })\r\n    }\r\n};\r\n\r\nexport const unfollowThunk = (userId) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.getUnfollow(userId).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollowApply(userId))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        })\r\n    }\r\n};\r\n\r\n\r\n","import {authAPI} from \"../components/api/api\";\r\nimport React from \"react\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    data: {userId, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuthMe().then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n        authAPI.login(email, password, rememberMe).then(response => (\r\n            authAPI.getAuthMe().then( response => {\r\n                if(response.data.resultCode === 0) {\r\n                    //getAuthUserData() позже реализовать по другому\r\n                }\r\n            })\r\n        ))\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout(dispatch).then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    })\r\n}\r\n\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport s from './Sidebar.module.css';\r\n\r\nconst Sidebar = (props) => {\r\n/*\r\n    let sidebarElements = props.sidebar.map(p =>\r\n            <div className={s.friend}>\r\n                <img src={p.iconLink}/>\r\n                <div>{p.name}</div>\r\n            </div>\r\n        )\r\n*/\r\n\r\n    return (\r\n/*\r\n        <div>\r\n            <div className={s.sidebar}>\r\n                Friends\r\n            </div>\r\n            <div className={s.friends}>\r\n                {sidebarElements}\r\n            </div>\r\n        </div>\r\n*/\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n\r\nconst Navbar = (props) => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink} >Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n        </div>\r\n        <Sidebar /*sidebar={props.state.sidebar}*//>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return <div className={s.post}>\r\n        <div className={s.item}>\r\n            <img src='https://www.meme-arsenal.com/memes/6e04ae9a90c6874a681e2c5d8cb5d046.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts\r\n        .map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my post</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add Post</button>\r\n                </div>\r\n            </div>\r\n                <div className={s.posts}>\r\n                    { postsElements }\r\n                </div>\r\n        </div>);\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = () => {\r\n    return (<div className={s.item} >\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>)\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState( {\r\n            editMode: true\r\n        })//setState асинхронен\r\n    }//this.forceUpdate(); позже почитать\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState( {\r\n            editMode: false\r\n        })\r\n        this.props.updateUserStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"/* временное решение, чтобы не терять статус */}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport MyPosts from \"../MyPosts/MyPosts\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div>\r\n                <img src=\"https://theinpaint.com/images/example-1-2.jpg\"/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatus status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport {addPostCreator, updateNewPostTextCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>)\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileThunk, getUserStatusThunk, setUserProfile, updateUserStatusThunk} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId; //вытаскиваем параметр id из url, если его нет, юзаем профиль по умолчанию\r\n        if (!userId) {\r\n            userId = '15131';\r\n        }\r\n        this.props.getProfileThunk(userId);\r\n        this.props.getUserStatusThunk(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateUserStatus={this.props.updateUserStatusThunk}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfileThunk, getUserStatusThunk, updateUserStatusThunk}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);","import React from 'react';\r\nimport s from './Music.module.css'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages\r\n        .map((m) => <Message message={m.message} key={m.id}/>);\r\n\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBodyCreator(body);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <textarea placeholder='Enter your message'\r\n                                  value={newMessageBody}\r\n                                  onChange={onNewMessageChange}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBodyCreator: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","export default __webpack_public_path__ + \"static/media/user.9556128f.png\";","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return <div>\r\n            <div>\r\n                { pages.map(p => {\r\n                        return <span className={props.currentPage === p && s.selectedPage}\r\n                        onClick={(e) => {props.onPageChanged(p) }}>{p}</span>\r\n                    })}\r\n            </div>\r\n            {\r\n                props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {props.unfollow(u.id);}}>Unfollow</button>\r\n                            : <button\r\n                                disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                onClick={() => {props.follow(u.id);}}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div>{u.name}</div><div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    followThunk,\r\n    unfollowThunk,\r\n    getUsersThunk,\r\n    setCurrentPage,\r\n} from \"../../redux/users-reducer\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.followThunk}\r\n                unfollow={this.props.unfollowThunk}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: 100 /*state.usersPage.totalUsersCount*/, //принудительное ограничение, в связи с тем что пользователей больше 10 тыс\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n};\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        followApply: (userId) => {\r\n            dispatch(followCreator(userId));\r\n        },\r\n        unfollowApply: (userId) => {\r\n            dispatch(unfollowCreator(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersCreator(users));\r\n        },\r\n        setCurrentPage: (pageNumber) => {\r\n            dispatch(setCurrentPageCreator(pageNumber))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountCreator(totalCount))\r\n        },\r\n        setToggleIsFetching: (isFetching) => {\r\n            dispatch(setToggleIsFetchingCreator(isFetching))\r\n        }\r\n    }\r\n};*/\r\n//оставил как пример, ниже сокращение для удобства\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, {setCurrentPage, getUsersThunk, followThunk, unfollowThunk}),\r\n    withAuthRedirect\r\n)(UsersContainer)","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://cdn.dribbble.com/users/182238/screenshots/2383317/lion2.jpg'/>\r\n        <div className={s.loginBlock}>{props.isAuth\r\n            ? <div>{props.login} - <button onClick={props.logout}>Logout</button> </div>\r\n            : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData, logout})(HeaderContainer);","import React from 'react';\r\nimport { Form, Field } from 'react-final-form'\r\n/*import { Redirect } from \"react-router-dom\";\r\nimport {authAPI} from \"../api/api\";*/\r\n\r\n\r\nconst required = value => (value ? undefined : 'Required');\r\n\r\nconst Login = (props) => {\r\n\r\n    /*const onSubmit = (values) => {\r\n        authAPI.login(values.email, values.password, values.rememberMe).then(response =>{\r\n            if(response.data.resultCode === 0) {\r\n                authAPI.getAuthMe().then(response =>{\r\n                    if(response.data.resultCode === 0) {\r\n                        debugger;\r\n                        setAuthUserData(response.data.data.id, response.data.data.email, response.data.data.login, true)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }*/\r\n\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                onSubmit={props.onSubmit}\r\n                render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                    <form onSubmit={handleSubmit}>\r\n                        <h2>Login Here</h2>\r\n                        <Field name=\"email\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <input {...input} type=\"text\" placeholder=\"Email\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <Field name=\"password\" validate={required}>\r\n                            {({ input, meta }) => (\r\n                                <div>\r\n                                    <input {...input} type=\"password\" placeholder=\"Password\" />\r\n                                    {meta.error && meta.touched && <span>{meta.error}</span>}\r\n                                </div>\r\n                            )}\r\n                        </Field>\r\n                        <div>\r\n                            <Field type={'checkbox'} name={'rememberMe'} component={'input'}/> remember me\r\n                        </div>\r\n                        <button type=\"submit\"\r\n                                /*onClick={form.reset}*/\r\n                        >Submit</button>\r\n                    </form>\r\n                )}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Login from \"./Login\";\r\nimport {login, setAuthUserData} from \"../../redux/auth-reducer\";\r\n/*import {authAPI} from \"../api/api\";\r\nimport {Redirect} from \"react-router-dom\";*/\r\n\r\n\r\n\r\nconst onSubmit = (values) => {\r\n    login(values.email, values.password, values.rememberMe)\r\n}\r\n\r\n/*const onSubmit = (values) => {\r\n    login(values.email, values.password, values.rememberMe).then({\r\n        if (isAuth) {\r\n            return <Redirect to={'/profile'}/>\r\n        }\r\n    })\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        onSubmit: onSubmit,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {}),\r\n)(Login);\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport Music from \"./components/Music/Music\";\r\nimport News from \"./components/News/News\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\r\nimport {getAuthUserData} from \"./redux/auth-reducer\";\r\nimport { withRouter } from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HashRouter /*basename={process.env.PUBLIC_URL} HashRouter вместо BrowserRouter использован по причине более удобной настройки на gh-pages */>\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar state={this.props.state}/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs'\r\n                               render={() => <DialogsContainer store={this.props.store}/>}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => <ProfileContainer store={this.props.store}/>}/>\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/login' render={() => <LoginContainer store={this.props.store}/>}/>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(null, {getAuthUserData} ))(App);\r\n","import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react'\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3PsDP\",\"item\":\"Navbar_item__3ILR8\",\"activeLink\":\"Navbar_activeLink__2PGMA\"};"],"sourceRoot":""}